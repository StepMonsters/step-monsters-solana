use borsh::BorshSerialize;
use solana_program::{
    account_info::{AccountInfo, next_account_info},
    entrypoint::ProgramResult,
    msg,
    pubkey::Pubkey,
};

use crate::{state::*, utils::*};

pub fn process_create_monster_feature_config_01(
    program_id: &Pubkey,
    accounts: &[AccountInfo],
) -> ProgramResult {
    let account_info_iter = &mut accounts.iter();
    let signer_info = next_account_info(account_info_iter)?;
    let rent_info = next_account_info(account_info_iter)?;
    let system_info = next_account_info(account_info_iter)?;
    let feature_config_info = next_account_info(account_info_iter)?;

    assert_signer(&signer_info)?;

    msg!("Create Config Monster Feature");
    let bump_seed = assert_derivation(
        program_id,
        feature_config_info,
        &[
            SEED_MONSTER_FEATURE_CONFIG.as_bytes(),
            program_id.as_ref(),
        ],
    )?;
    let feature_config_seeds = &[
        SEED_MONSTER_FEATURE_CONFIG.as_bytes(),
        program_id.as_ref(),
        &[bump_seed],
    ];
    create_or_allocate_account_raw(
        *program_id,
        feature_config_info,
        rent_info,
        system_info,
        signer_info,
        MAX_MONSTER_FEATURE_CONFIG_LENGTH,
        feature_config_seeds,
    )?;

    let monster_0: [[u16; 7]; 64] = [
        [250, 0, 0, 0, 0, 0, 0],
        [200, 50, 0, 0, 0, 0, 0],
        [150, 120, 0, 150, 0, 0, 0],
        [150, 150, 0, 140, 0, 0, 0],
        [50, 180, 0, 200, 0, 120, 0],
        [50, 200, 80, 180, 0, 0, 0],
        [50, 150, 0, 200, 0, 0, 100],
        [50, 250, 0, 260, 120, 0, 0],
        [25, 300, 140, 200, 0, 0, 0],
        [25, 300, 0, 280, 0, 200, 0],
        [200, 0, 0, 0, 0, 0, 0],
        [150, 0, 0, 0, 0, 50, 0],
        [150, 60, 0, 0, 0, 80, 0],
        [150, 0, 40, 0, 0, 100, 0],
        [100, 0, 0, 0, 0, 150, 80],
        [100, 80, 0, 0, 0, 180, 0],
        [50, 0, 100, 0, 50, 200, 0],
        [50, 0, 0, 120, 60, 220, 0],
        [25, 0, 0, 0, 80, 250, 100],
        [25, 0, 70, 0, 260, 100, 80],
        [150, 0, 0, 0, 0, 0, 0],
        [150, 50, 0, 0, 0, 0, 50],
        [150, 0, 80, 0, 0, 0, 60],
        [100, 0, 0, 120, 0, 0, 60],
        [100, 0, 0, 0, 150, 0, 70],
        [100, 50, 0, 90, 0, 0, 80],
        [50, 0, 100, 0, 0, 120, 100],
        [50, 70, 0, 110, 0, 0, 150],
        [50, 0, 90, 0, 120, 0, 180],
        [40, 0, 110, 0, 0, 130, 200],
        [40, 0, 0, 120, 160, 0, 260],
        [20, 70, 0, 90, 0, 100, 320],
        [150, 0, 50, 0, 0, 0, 0],
        [150, 0, 70, 30, 0, 0, 0],
        [150, 0, 80, 0, 0, 0, 40],
        [100, 0, 110, 0, 50, 0, 0],
        [100, 0, 130, 0, 0, 80, 0],
        [100, 0, 150, 80, 0, 0, 0],
        [50, 70, 160, 0, 80, 0, 0],
        [50, 0, 160, 90, 0, 100, 0],
        [50, 130, 170, 0, 0, 0, 100],
        [40, 0, 190, 110, 160, 0, 0],
        [30, 0, 200, 200, 0, 180, 0],
        [30, 190, 230, 0, 180, 0, 0],
        [300, 0, 0, 0, 0, 0, 0],
        [250, 0, 0, 0, 60, 0, 0],
        [200, 0, 70, 0, 70, 0, 0],
        [150, 0, 0, 90, 100, 50, 0],
        [100, 100, 0, 0, 140, 80, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
    ];

    let monster_1: [[u16; 7]; 64] = [
        [400, 0, 0, 0, 0, 0, 0],
        [200, 80, 0, 0, 0, 0, 0],
        [200, 120, 0, 50, 50, 0, 0],
        [100, 150, 0, 80, 0, 60, 0],
        [100, 200, 0, 120, 0, 0, 80],
        [700, 0, 0, 0, 0, 0, 0],
        [200, 100, 120, 0, 60, 0, 0],
        [100, 250, 260, 0, 0, 90, 0],
        [200, 0, 0, 0, 0, 0, 0],
        [150, 0, 0, 0, 0, 50, 0],
        [150, 60, 0, 0, 0, 80, 0],
        [150, 0, 40, 0, 0, 100, 0],
        [100, 0, 0, 70, 0, 150, 60],
        [100, 80, 0, 90, 0, 180, 0],
        [50, 0, 100, 0, 0, 200, 100],
        [50, 70, 0, 120, 0, 220, 0],
        [25, 0, 0, 0, 170, 250, 0],
        [25, 0, 70, 0, 260, 260, 0],
        [150, 0, 0, 0, 0, 0, 0],
        [150, 0, 50, 0, 0, 0, 0],
        [150, 0, 60, 50, 0, 0, 0],
        [100, 60, 80, 0, 0, 0, 0],
        [100, 0, 90, 0, 80, 0, 0],
        [100, 0, 110, 0, 0, 0, 60],
        [50, 0, 130, 80, 0, 60, 0],
        [50, 70, 150, 0, 90, 0, 0],
        [50, 0, 170, 0, 0, 110, 100],
        [40, 110, 180, 0, 110, 0, 0],
        [30, 0, 200, 100, 0, 120, 0],
        [30, 130, 210, 0, 140, 0, 0],
        [300, 0, 0, 0, 0, 0, 0],
        [250, 0, 0, 0, 60, 0, 0],
        [200, 0, 70, 0, 70, 0, 0],
        [150, 80, 0, 0, 100, 50, 0],
        [100, 0, 80, 0, 140, 0, 80],
        [700, 0, 0, 0, 0, 0, 0],
        [300, 0, 120, 0, 180, 0, 50],
        [200, 0, 0, 0, 0, 0, 0],
        [150, 0, 0, 40, 0, 0, 0],
        [150, 50, 0, 50, 0, 0, 0],
        [150, 0, 70, 60, 0, 0, 0],
        [150, 0, 0, 100, 0, 80, 0],
        [50, 100, 0, 120, 0, 0, 0],
        [50, 0, 110, 130, 0, 0, 0],
        [50, 0, 0, 150, 0, 0, 70],
        [25, 0, 0, 200, 160, 80, 0],
        [25, 190, 0, 220, 0, 110, 0],
        [600, 0, 0, 0, 0, 0, 0],
        [300, 0, 0, 0, 100, 90, 0],
        [100, 0, 110, 0, 140, 0, 40],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
    ];

    let monster_2: [[u16; 7]; 64] = [
        [400, 0, 0, 0, 0, 0, 0],
        [200, 80, 0, 0, 0, 0, 0],
        [200, 120, 0, 50, 50, 0, 0],
        [100, 150, 0, 80, 0, 60, 0],
        [100, 200, 0, 120, 0, 0, 80],
        [300, 0, 0, 0, 0, 0, 0],
        [200, 100, 120, 0, 60, 0, 0],
        [200, 0, 0, 0, 0, 0, 0],
        [200, 0, 0, 0, 0, 0, 0],
        [100, 250, 260, 0, 0, 90, 0],
        [400, 0, 0, 0, 0, 0, 0],
        [200, 0, 0, 0, 0, 50, 0],
        [150, 60, 0, 0, 0, 80, 0],
        [150, 0, 40, 0, 0, 100, 0],
        [100, 0, 0, 70, 0, 150, 60],
        [150, 0, 0, 0, 0, 0, 0],
        [150, 0, 50, 0, 0, 0, 0],
        [150, 0, 60, 50, 0, 0, 0],
        [100, 60, 80, 0, 0, 0, 0],
        [100, 0, 90, 0, 80, 0, 0],
        [100, 0, 110, 0, 0, 0, 60],
        [50, 0, 130, 80, 0, 60, 0],
        [50, 70, 150, 0, 90, 0, 0],
        [50, 0, 170, 0, 0, 110, 100],
        [40, 110, 180, 0, 110, 0, 0],
        [30, 0, 200, 100, 0, 120, 0],
        [30, 130, 210, 0, 140, 0, 0],
        [300, 0, 0, 0, 0, 0, 0],
        [250, 0, 0, 0, 60, 0, 0],
        [200, 0, 70, 0, 70, 0, 0],
        [150, 80, 0, 0, 100, 50, 0],
        [100, 0, 80, 0, 140, 0, 80],
        [500, 0, 0, 0, 0, 0, 0],
        [200, 0, 0, 0, 0, 0, 0],
        [100, 0, 0, 0, 0, 0, 0],
        [100, 0, 0, 0, 0, 0, 0],
        [100, 0, 120, 0, 180, 0, 50],
        [200, 0, 0, 0, 0, 0, 0],
        [150, 0, 0, 40, 0, 0, 0],
        [150, 50, 0, 50, 0, 0, 0],
        [150, 0, 70, 60, 0, 0, 0],
        [150, 0, 0, 100, 0, 80, 0],
        [50, 100, 0, 120, 0, 0, 0],
        [50, 0, 110, 130, 0, 0, 0],
        [50, 0, 0, 150, 0, 0, 70],
        [25, 0, 0, 200, 160, 80, 0],
        [25, 190, 0, 220, 0, 110, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
    ];

    let mut feature_config = MonsterFeatureConfig::from_account_info(feature_config_info)?;
    feature_config.monster_0 = handle_monster_feature_config_vector(monster_0);
    feature_config.monster_1 = handle_monster_feature_config_vector(monster_1);
    feature_config.monster_2 = handle_monster_feature_config_vector(monster_2);
    feature_config.serialize(&mut *feature_config_info.try_borrow_mut_data()?)?;

    Ok(())
}

pub fn process_create_monster_feature_config_02(
    _program_id: &Pubkey,
    accounts: &[AccountInfo],
) -> ProgramResult {
    let account_info_iter = &mut accounts.iter();
    let signer_info = next_account_info(account_info_iter)?;
    let _rent_info = next_account_info(account_info_iter)?;
    let _system_info = next_account_info(account_info_iter)?;
    let feature_config_info = next_account_info(account_info_iter)?;

    assert_signer(&signer_info)?;

    let monster_3: [[u16; 7]; 64] = [
        [400, 0, 0, 0, 0, 0, 0],
        [200, 80, 0, 0, 0, 0, 0],
        [200, 120, 0, 50, 50, 0, 0],
        [100, 150, 0, 80, 0, 60, 0],
        [100, 200, 0, 120, 0, 0, 80],
        [400, 0, 0, 0, 0, 0, 0],
        [200, 0, 0, 0, 0, 50, 0],
        [150, 60, 0, 0, 0, 80, 0],
        [150, 0, 40, 0, 0, 100, 0],
        [100, 0, 0, 70, 0, 150, 60],
        [150, 0, 0, 0, 0, 0, 0],
        [150, 0, 50, 0, 0, 0, 0],
        [150, 0, 60, 50, 0, 0, 0],
        [100, 60, 80, 0, 0, 0, 0],
        [100, 0, 90, 0, 80, 0, 0],
        [100, 0, 110, 0, 0, 0, 60],
        [50, 0, 130, 80, 0, 60, 0],
        [50, 70, 150, 0, 90, 0, 0],
        [50, 0, 170, 0, 0, 110, 100],
        [40, 110, 180, 0, 110, 0, 0],
        [30, 0, 200, 100, 0, 120, 0],
        [30, 130, 210, 0, 140, 0, 0],
        [300, 0, 0, 0, 0, 0, 0],
        [250, 0, 0, 0, 60, 0, 0],
        [200, 0, 70, 0, 70, 0, 0],
        [150, 80, 0, 0, 100, 50, 0],
        [100, 0, 80, 0, 140, 0, 80],
        [500, 0, 0, 0, 0, 0, 0],
        [200, 0, 0, 0, 0, 0, 0],
        [100, 0, 0, 0, 0, 0, 0],
        [100, 0, 0, 0, 0, 0, 0],
        [100, 0, 120, 0, 180, 0, 50],
        [500, 0, 0, 0, 0, 0, 0],
        [300, 0, 0, 40, 0, 0, 0],
        [200, 50, 0, 50, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
    ];

    let monster_4: [[u16; 7]; 64] = [
        [400, 0, 0, 0, 0, 0, 0],
        [200, 80, 0, 0, 0, 0, 0],
        [200, 120, 0, 50, 50, 0, 0],
        [100, 150, 0, 80, 0, 60, 0],
        [100, 200, 0, 120, 0, 0, 80],
        [500, 0, 0, 0, 0, 0, 0],
        [300, 0, 0, 0, 0, 0, 0],
        [200, 0, 0, 0, 0, 0, 0],
        [400, 0, 0, 0, 0, 0, 0],
        [200, 0, 0, 0, 0, 50, 0],
        [150, 60, 0, 0, 0, 80, 0],
        [150, 0, 40, 0, 0, 100, 0],
        [100, 0, 0, 70, 0, 150, 60],
        [150, 0, 0, 0, 0, 0, 0],
        [150, 0, 50, 0, 0, 0, 0],
        [150, 0, 60, 50, 0, 0, 0],
        [100, 60, 80, 0, 0, 0, 0],
        [100, 0, 90, 0, 80, 0, 0],
        [300, 0, 0, 0, 0, 0, 0],
        [250, 0, 0, 0, 60, 0, 0],
        [200, 0, 70, 0, 70, 0, 0],
        [150, 80, 0, 0, 100, 50, 0],
        [100, 0, 80, 0, 140, 0, 80],
        [500, 0, 0, 0, 0, 0, 0],
        [200, 0, 0, 0, 0, 0, 0],
        [100, 0, 0, 0, 0, 0, 0],
        [100, 0, 0, 0, 0, 0, 0],
        [100, 0, 120, 0, 180, 0, 50],
        [300, 0, 0, 0, 0, 0, 0],
        [250, 0, 0, 40, 0, 0, 0],
        [200, 50, 0, 50, 0, 0, 0],
        [150, 0, 0, 0, 0, 0, 0],
        [100, 0, 0, 0, 0, 0, 0],
        [300, 0, 0, 0, 0, 0, 0],
        [250, 0, 0, 0, 0, 0, 0],
        [200, 0, 0, 0, 0, 0, 0],
        [150, 0, 0, 0, 0, 0, 0],
        [100, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
    ];

    let monster_5 = empty_config().clone();

    let mut feature_config = MonsterFeatureConfig::from_account_info(feature_config_info)?;
    feature_config.monster_3 = handle_monster_feature_config_vector(monster_3);
    feature_config.monster_4 = handle_monster_feature_config_vector(monster_4);
    feature_config.monster_5 = handle_monster_feature_config_vector(monster_5);
    feature_config.serialize(&mut *feature_config_info.try_borrow_mut_data()?)?;

    Ok(())
}

pub fn process_create_monster_feature_config_03(
    _program_id: &Pubkey,
    accounts: &[AccountInfo],
) -> ProgramResult {
    let account_info_iter = &mut accounts.iter();
    let signer_info = next_account_info(account_info_iter)?;
    let _rent_info = next_account_info(account_info_iter)?;
    let _system_info = next_account_info(account_info_iter)?;
    let feature_config_info = next_account_info(account_info_iter)?;

    assert_signer(&signer_info)?;

    let monster_6 = empty_config().clone();
    let monster_7 = empty_config().clone();
    let monster_8 = empty_config().clone();

    let mut feature_config = MonsterFeatureConfig::from_account_info(feature_config_info)?;
    feature_config.monster_6 = handle_monster_feature_config_vector(monster_6);
    feature_config.monster_7 = handle_monster_feature_config_vector(monster_7);
    feature_config.monster_8 = handle_monster_feature_config_vector(monster_8);
    feature_config.serialize(&mut *feature_config_info.try_borrow_mut_data()?)?;

    Ok(())
}

pub fn empty_config() -> [[u16; 7]; 64] {
    let empty: [[u16; 7]; 64] = [
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
    ];
    return empty;
}